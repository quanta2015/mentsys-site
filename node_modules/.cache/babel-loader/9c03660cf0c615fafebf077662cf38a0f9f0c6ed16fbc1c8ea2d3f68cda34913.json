{"ast":null,"code":"const toString = Object.prototype.toString;\nconst isArray = Array.isArray || function (val) {\n  return toString.call(val) === '[object Array]';\n};\nconst isValidParamValue = val => {\n  const t = typeof val;\n  // If the type of val is null, undefined, number, string, boolean, return TRUE.\n  return val === null || t !== 'object' && t !== 'function';\n};\nconst endsWith = (str, suffix) => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.indexOf(suffix, index) === index;\n};\nconst encode = encodeURIComponent;\nconst decode = function (s) {\n  try {\n    return decodeURIComponent(s.replace(/\\+/g, ' '));\n  } catch (err) {\n    return s;\n  }\n};\nexport const param = function (o) {\n  let serializeArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let sep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '&';\n  let eq = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '=';\n  const buf = [];\n  for (let key in o) {\n    const val = o[key];\n    key = encode(key);\n\n    // val is valid non-array value\n    if (isValidParamValue(val)) {\n      buf.push(key);\n      if (val !== undefined) {\n        buf.push(eq, encode(val + ''));\n      }\n      buf.push(sep);\n    }\n\n    // val is not empty array\n    else if (isArray(val) && val.length) {\n      for (let i = 0; i < val.length; ++i) {\n        const v = val[i];\n        if (isValidParamValue(v)) {\n          // ?aParam[]=value1&aParam[]=value2&aParam[]=value3\n          buf.push(key, serializeArray ? encode('[]') : '');\n          if (v !== undefined) {\n            buf.push(eq, encode(v + ''));\n          }\n          buf.push(sep);\n        }\n      }\n    }\n    // ignore other cases, including empty array, Function, RegExp, Date etc.\n  }\n\n  buf.pop();\n  return buf.join('');\n};\n\n/**\r\n * query字符串转为对象\r\n */\nexport const unparam = function (str, sep, eq) {\n  str = str + '';\n  sep = sep || '&';\n  eq = eq || '=';\n  const ret = {};\n  const pairs = str.split(sep);\n  const length = pairs.length;\n  let key, val;\n  if (!str) {\n    return ret;\n  }\n  for (let i = 0; i < length; ++i) {\n    const eqIndex = pairs[i].indexOf(eq);\n    if (eqIndex === -1) {\n      // 没有=\n      key = decode(pairs[i]);\n      val = undefined;\n    } else {\n      // remember to decode key!\n      key = decode(pairs[i].substring(0, eqIndex));\n      val = decode(pairs[i].substring(eqIndex + 1));\n      if (endsWith(key, '[]')) {\n        key = key.substring(0, key.length - 2);\n      }\n    }\n    if (key in ret) {\n      if (isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n    } else {\n      ret[key] = val;\n    }\n  }\n  return ret;\n};","map":{"version":3,"names":["toString","Object","prototype","isArray","Array","val","call","isValidParamValue","t","endsWith","str","suffix","index","length","indexOf","encode","encodeURIComponent","decode","s","decodeURIComponent","replace","err","param","o","serializeArray","sep","eq","buf","key","push","undefined","i","v","pop","join","unparam","ret","pairs","split","eqIndex","substring"],"sources":["E:/Project/tutorManagementSystem/mentsys-site/mentsys-site/src/util/param.js"],"sourcesContent":["const toString = Object.prototype.toString\r\nconst isArray =\r\n  Array.isArray ||\r\n  function(val) {\r\n    return toString.call(val) === '[object Array]'\r\n  }\r\n\r\nconst isValidParamValue = val => {\r\n  const t = typeof val\r\n  // If the type of val is null, undefined, number, string, boolean, return TRUE.\r\n  return val === null || (t !== 'object' && t !== 'function')\r\n}\r\nconst endsWith = (str, suffix) => {\r\n  const index = str.length - suffix.length\r\n  return index >= 0 && str.indexOf(suffix, index) === index\r\n}\r\n\r\nconst encode = encodeURIComponent\r\n\r\nconst decode = function(s) {\r\n  try {\r\n    return decodeURIComponent(s.replace(/\\+/g, ' '))\r\n  } catch (err) {\r\n    return s\r\n  }\r\n}\r\n\r\nexport const param = function(o, serializeArray = true, sep = '&', eq = '=') {\r\n  const buf = []\r\n\r\n  for (let key in o) {\r\n    const val = o[key]\r\n    key = encode(key)\r\n\r\n    // val is valid non-array value\r\n    if (isValidParamValue(val)) {\r\n      buf.push(key)\r\n      if (val !== undefined) {\r\n        buf.push(eq, encode(val + ''))\r\n      }\r\n      buf.push(sep)\r\n    }\r\n\r\n    // val is not empty array\r\n    else if (isArray(val) && val.length) {\r\n      for (let i = 0; i < val.length; ++i) {\r\n        const v = val[i]\r\n        if (isValidParamValue(v)) {\r\n          // ?aParam[]=value1&aParam[]=value2&aParam[]=value3\r\n          buf.push(key, serializeArray ? encode('[]') : '')\r\n          if (v !== undefined) {\r\n            buf.push(eq, encode(v + ''))\r\n          }\r\n          buf.push(sep)\r\n        }\r\n      }\r\n    }\r\n    // ignore other cases, including empty array, Function, RegExp, Date etc.\r\n  }\r\n\r\n  buf.pop()\r\n  return buf.join('')\r\n}\r\n\r\n/**\r\n * query字符串转为对象\r\n */\r\nexport const unparam = function(str, sep, eq) {\r\n  str = str + ''\r\n  sep = sep || '&'\r\n  eq = eq || '='\r\n\r\n  const ret = {}\r\n  const pairs = str.split(sep)\r\n  const length = pairs.length\r\n  let key, val\r\n\r\n  if (!str) {\r\n    return ret\r\n  }\r\n\r\n  for (let i = 0; i < length; ++i) {\r\n    const eqIndex = pairs[i].indexOf(eq)\r\n    if (eqIndex === -1) {\r\n      // 没有=\r\n      key = decode(pairs[i])\r\n      val = undefined\r\n    } else {\r\n      // remember to decode key!\r\n      key = decode(pairs[i].substring(0, eqIndex))\r\n      val = decode(pairs[i].substring(eqIndex + 1))\r\n\r\n      if (endsWith(key, '[]')) {\r\n        key = key.substring(0, key.length - 2)\r\n      }\r\n    }\r\n    if (key in ret) {\r\n      if (isArray(ret[key])) {\r\n        ret[key].push(val)\r\n      } else {\r\n        ret[key] = [ret[key], val]\r\n      }\r\n    } else {\r\n      ret[key] = val\r\n    }\r\n  }\r\n  return ret\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}