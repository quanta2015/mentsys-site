{"ast":null,"code":"/**\r\n * 等比例压缩图片\r\n * @param file 原始图片\r\n * @param limitWidth 限制宽度\r\n * @param limitHeight 限制高度\r\n * @param quality 压缩质量, 默认0.92\r\n * @param orientation 方向元信息，移动端IOS需要注意是，使用压缩后会清除掉图像方向信息，导致上传后图片旋转\r\n */\nexport default async function fileToBlob(file, limitWidth, limitHeight) {\n  let quality = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.92;\n  let orientation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  if (!('createImageBitmap' in window)) {\n    window.createImageBitmap = async function (blob) {\n      return new Promise((resolve, reject) => {\n        let img = document.createElement('img');\n        img.addEventListener('load', function () {\n          resolve(this);\n        });\n        img.src = URL.createObjectURL(blob);\n      });\n    };\n  }\n  let drawable = await createImageBitmap(file);\n  let sw = drawable.width;\n  let sh = drawable.height;\n  const canvas = document.createElement('canvas');\n  let scale = Math.min(limitWidth / sw, limitHeight / sh);\n\n  // 限制尺寸大于原始尺寸，无需缩放\n  if (scale > 1) scale = 1;\n  // 等比例缩放后的宽高\n  let newWidth = sw * scale;\n  let newHeight = sh * scale;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw new Error('Could not create canvas context');\n  switch (orientation) {\n    case 3:\n      // 代表用户竖着iphone自拍\n      canvas.width = newWidth;\n      canvas.height = newHeight;\n      ctx.rotate(Math.PI);\n      ctx.drawImage(drawable, 0 - newWidth, 0 - newHeight, newWidth, newHeight);\n      break;\n    case 6:\n      // 代表用户横着iphone自拍，且摄像头在左侧\n      canvas.width = newHeight;\n      canvas.height = newWidth;\n      ctx.rotate(Math.PI / 2);\n      ctx.drawImage(drawable, 0, 0 - newHeight, newWidth, newHeight);\n      break;\n    default:\n      canvas.width = newWidth;\n      canvas.height = newHeight;\n      ctx.drawImage(drawable, 0, 0, sw, sh, 0, 0, newWidth, newHeight);\n  }\n  let type = 'image/jpeg';\n  let blob = await new Promise(r => canvas.toBlob(r, type, quality));\n\n  // DEBUG\n  // console.log('原尺寸', sw, sh)\n  // console.log('限制尺寸', limitWidth, limitHeight)\n  // console.log('现尺寸', sw * scale, sh * scale)\n  // console.log('比例', scale)\n\n  // return ctx.getImageData(0, 0, width, height);\n  // return canvas.toDataURL(type, quality)\n  return blob;\n}","map":{"version":3,"names":["fileToBlob","file","limitWidth","limitHeight","quality","orientation","window","createImageBitmap","blob","Promise","resolve","reject","img","document","createElement","addEventListener","src","URL","createObjectURL","drawable","sw","width","sh","height","canvas","scale","Math","min","newWidth","newHeight","ctx","getContext","Error","rotate","PI","drawImage","type","r","toBlob"],"sources":["E:/Project/tutorManagementSystem/mentsys-site/mentsys-site/src/util/fileToBlob.js"],"sourcesContent":["/**\r\n * 等比例压缩图片\r\n * @param file 原始图片\r\n * @param limitWidth 限制宽度\r\n * @param limitHeight 限制高度\r\n * @param quality 压缩质量, 默认0.92\r\n * @param orientation 方向元信息，移动端IOS需要注意是，使用压缩后会清除掉图像方向信息，导致上传后图片旋转\r\n */\r\nexport default async function fileToBlob(file, limitWidth, limitHeight, quality = 0.92, orientation = 1) {\r\n\r\n\tif (!('createImageBitmap' in window)) {\r\n\t\twindow.createImageBitmap = async function (blob) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tlet img = document.createElement('img')\r\n\t\t\t\timg.addEventListener('load', function () {\r\n\t\t\t\t\tresolve(this)\r\n\t\t\t\t})\r\n\t\t\t\timg.src = URL.createObjectURL(blob)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tlet drawable = await createImageBitmap(file)\r\n\tlet sw = drawable.width\r\n\tlet sh = drawable.height\r\n\tconst canvas = document.createElement('canvas')\r\n\tlet scale = Math.min(limitWidth / sw, limitHeight / sh)\r\n\r\n\t// 限制尺寸大于原始尺寸，无需缩放\r\n\tif (scale > 1) scale = 1\r\n\t// 等比例缩放后的宽高\r\n\tlet newWidth = sw * scale\r\n\tlet newHeight = sh * scale\r\n\r\n\tconst ctx = canvas.getContext('2d')\r\n\tif (!ctx) throw new Error('Could not create canvas context')\r\n\r\n\tswitch (orientation) {\r\n\t\tcase 3:\r\n\t\t\t// 代表用户竖着iphone自拍\r\n\t\t\tcanvas.width = newWidth\r\n\t\t\tcanvas.height = newHeight\r\n\t\t\tctx.rotate(Math.PI);\r\n\t\t\tctx.drawImage(drawable, 0 - newWidth, 0 - newHeight, newWidth, newHeight)\r\n\t\t\tbreak\r\n\t\tcase 6:\r\n\t\t\t// 代表用户横着iphone自拍，且摄像头在左侧\r\n\t\t\tcanvas.width = newHeight\r\n\t\t\tcanvas.height = newWidth\r\n\t\t\tctx.rotate(Math.PI / 2);\r\n\t\t\tctx.drawImage(drawable,0 , 0 - newHeight, newWidth, newHeight)\r\n\t\t\tbreak\r\n\t\tdefault :\r\n\t\t\tcanvas.width = newWidth\r\n\t\t\tcanvas.height = newHeight\r\n\t\t\tctx.drawImage(drawable, 0, 0, sw, sh, 0, 0, newWidth, newHeight)\r\n\t}\r\n\r\n\tlet type = 'image/jpeg'\r\n\tlet blob = await new Promise(r => canvas.toBlob(r, type, quality))\r\n\r\n\t// DEBUG\r\n\t// console.log('原尺寸', sw, sh)\r\n\t// console.log('限制尺寸', limitWidth, limitHeight)\r\n\t// console.log('现尺寸', sw * scale, sh * scale)\r\n\t// console.log('比例', scale)\r\n\r\n\t// return ctx.getImageData(0, 0, width, height);\r\n\t// return canvas.toDataURL(type, quality)\r\n\treturn blob\r\n}\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAeA,UAAU,CAACC,IAAI,EAAEC,UAAU,EAAEC,WAAW,EAAmC;EAAA,IAAjCC,OAAO,uEAAG,IAAI;EAAA,IAAEC,WAAW,uEAAG,CAAC;EAEtG,IAAI,EAAE,mBAAmB,IAAIC,MAAM,CAAC,EAAE;IACrCA,MAAM,CAACC,iBAAiB,GAAG,gBAAgBC,IAAI,EAAE;MAChD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACvC,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QACvCF,GAAG,CAACG,gBAAgB,CAAC,MAAM,EAAE,YAAY;UACxCL,OAAO,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;QACFE,GAAG,CAACI,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACV,IAAI,CAAC;MACpC,CAAC,CAAC;IACH,CAAC;EACF;EAEA,IAAIW,QAAQ,GAAG,MAAMZ,iBAAiB,CAACN,IAAI,CAAC;EAC5C,IAAImB,EAAE,GAAGD,QAAQ,CAACE,KAAK;EACvB,IAAIC,EAAE,GAAGH,QAAQ,CAACI,MAAM;EACxB,MAAMC,MAAM,GAAGX,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,IAAIW,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACzB,UAAU,GAAGkB,EAAE,EAAEjB,WAAW,GAAGmB,EAAE,CAAC;;EAEvD;EACA,IAAIG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC;EACxB;EACA,IAAIG,QAAQ,GAAGR,EAAE,GAAGK,KAAK;EACzB,IAAII,SAAS,GAAGP,EAAE,GAAGG,KAAK;EAE1B,MAAMK,GAAG,GAAGN,MAAM,CAACO,UAAU,CAAC,IAAI,CAAC;EACnC,IAAI,CAACD,GAAG,EAAE,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;EAE5D,QAAQ3B,WAAW;IAClB,KAAK,CAAC;MACL;MACAmB,MAAM,CAACH,KAAK,GAAGO,QAAQ;MACvBJ,MAAM,CAACD,MAAM,GAAGM,SAAS;MACzBC,GAAG,CAACG,MAAM,CAACP,IAAI,CAACQ,EAAE,CAAC;MACnBJ,GAAG,CAACK,SAAS,CAAChB,QAAQ,EAAE,CAAC,GAAGS,QAAQ,EAAE,CAAC,GAAGC,SAAS,EAAED,QAAQ,EAAEC,SAAS,CAAC;MACzE;IACD,KAAK,CAAC;MACL;MACAL,MAAM,CAACH,KAAK,GAAGQ,SAAS;MACxBL,MAAM,CAACD,MAAM,GAAGK,QAAQ;MACxBE,GAAG,CAACG,MAAM,CAACP,IAAI,CAACQ,EAAE,GAAG,CAAC,CAAC;MACvBJ,GAAG,CAACK,SAAS,CAAChB,QAAQ,EAAC,CAAC,EAAG,CAAC,GAAGU,SAAS,EAAED,QAAQ,EAAEC,SAAS,CAAC;MAC9D;IACD;MACCL,MAAM,CAACH,KAAK,GAAGO,QAAQ;MACvBJ,MAAM,CAACD,MAAM,GAAGM,SAAS;MACzBC,GAAG,CAACK,SAAS,CAAChB,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAEC,EAAE,EAAEE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAEM,QAAQ,EAAEC,SAAS,CAAC;EAAA;EAGlE,IAAIO,IAAI,GAAG,YAAY;EACvB,IAAI5B,IAAI,GAAG,MAAM,IAAIC,OAAO,CAAC4B,CAAC,IAAIb,MAAM,CAACc,MAAM,CAACD,CAAC,EAAED,IAAI,EAAEhC,OAAO,CAAC,CAAC;;EAElE;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,OAAOI,IAAI;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}