{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"E:\\\\Project\\\\tutorManagementSystem\\\\mentsys-site\\\\mentsys-site\\\\src\\\\component\\\\UploadImg\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { isN } from '@/util/fn';\nimport { inject, observer, MobXProviderContext } from 'mobx-react';\nimport { API_UPLOAD } from '@/constant/urls';\nimport { API_SERVER } from '@/constant/apis';\nimport fileToBlob from '@/util/fileToBlob';\nimport s from './index.module.less';\nimport person from '@/img/person.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImg = _ref => {\n  _s();\n  var _store$user, _store$user2;\n  let {\n    width,\n    height\n  } = _ref;\n  const {\n    store\n  } = React.useContext(MobXProviderContext);\n  useEffect(() => {}, []);\n  const importPhoto = async e => {\n    if (e.target.files.length > 0) {\n      let file = e.target.files[0];\n      const blob = await fileToBlob(file, width, height, 0.7);\n      let formData = new FormData();\n      let filetype = 'user';\n      formData.append('file', blob, filetype);\n      let r = await store.post(API_UPLOAD, formData);\n      // console.log(r)\n      if (r.code === 200) {\n        store.setUserVal(r.data.path, 'img');\n        _message.info('上传图片成功');\n      } else {\n        _message.error(r.msg);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.uploadImg,\n    style: {\n      'height': height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*;\",\n      capture: \"user\",\n      onChange: importPhoto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isN((_store$user = store.user) === null || _store$user === void 0 ? void 0 : _store$user.img) ? person : `${API_SERVER}/${(_store$user2 = store.user) === null || _store$user2 === void 0 ? void 0 : _store$user2.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImg, \"zcSHy1BfRD8G+YsMEU+ijfZDP/Y=\");\n_c = UploadImg;\nexport default _c2 = observer(UploadImg);\nvar _c, _c2;\n$RefreshReg$(_c, \"UploadImg\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","isN","inject","observer","MobXProviderContext","API_UPLOAD","API_SERVER","fileToBlob","s","person","UploadImg","width","height","store","useContext","importPhoto","e","target","files","length","file","blob","formData","FormData","filetype","append","r","post","code","setUserVal","data","path","info","error","msg","uploadImg","user","img"],"sources":["E:/Project/tutorManagementSystem/mentsys-site/mentsys-site/src/component/UploadImg/index.js"],"sourcesContent":["import React, { useState, useEffect,useCallback,useRef } from 'react';\rimport {isN} from '@/util/fn'\rimport { inject,observer,MobXProviderContext } from 'mobx-react'\rimport { API_UPLOAD } from '@/constant/urls'\rimport { API_SERVER } from '@/constant/apis'\rimport fileToBlob from '@/util/fileToBlob'\rimport { message } from 'antd'\r\rimport s from './index.module.less';\r\rimport person from '@/img/person.svg'\r\r\r\rconst UploadImg = ({width, height}) => {\r  const { store } = React.useContext(MobXProviderContext);\r\r\r  useEffect(() => {\r    \r  }, []);\r\r  const importPhoto = async (e)=>{\r    if (e.target.files.length > 0) {\r      let file = e.target.files[0]\r\r\r      const blob = await fileToBlob(file, width, height, 0.7)\r\r      let formData = new FormData()\r      let filetype = 'user'\r      formData.append('file', blob, filetype)\r      \r      let r = await store.post(API_UPLOAD, formData)\r      // console.log(r)\r      if (r.code === 200) {\r        store.setUserVal(r.data.path, 'img')\r        message.info('上传图片成功')\r      } else {\r        message.error(r.msg)\r      }\r    }\r  }\r\r  return (\r    <div className={s.uploadImg} style={{ 'height':height }}>\r      <input type=\"file\" accept=\"image/*;\" capture=\"user\" onChange={importPhoto} />\r      <img src={isN(store.user?.img)?person:`${API_SERVER}/${store.user?.img}`} />\r    </div>\r  )\r}\r\rexport default  observer(UploadImg)\r\r\r\r\r\r\r\r\r\r\r\r\r"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAACC,WAAW,EAACC,MAAM,QAAQ,OAAO;AACrE,SAAQC,GAAG,QAAO,WAAW;AAC7B,SAASC,MAAM,EAACC,QAAQ,EAACC,mBAAmB,QAAQ,YAAY;AAChE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,UAAU,MAAM,mBAAmB;AAG1C,OAAOC,CAAC,MAAM,qBAAqB;AAEnC,OAAOC,MAAM,MAAM,kBAAkB;AAAA;AAIrC,MAAMC,SAAS,GAAG,QAAqB;EAAA;EAAA;EAAA,IAApB;IAACC,KAAK;IAAEC;EAAM,CAAC;EAChC,MAAM;IAAEC;EAAM,CAAC,GAAGjB,KAAK,CAACkB,UAAU,CAACV,mBAAmB,CAAC;EAGvDN,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,WAAW,GAAG,MAAOC,CAAC,IAAG;IAC7B,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,IAAIC,IAAI,GAAGJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAG5B,MAAMG,IAAI,GAAG,MAAMd,UAAU,CAACa,IAAI,EAAET,KAAK,EAAEC,MAAM,EAAE,GAAG,CAAC;MAEvD,IAAIU,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC7B,IAAIC,QAAQ,GAAG,MAAM;MACrBF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,EAAEG,QAAQ,CAAC;MAEvC,IAAIE,CAAC,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACtB,UAAU,EAAEiB,QAAQ,CAAC;MAC9C;MACA,IAAII,CAAC,CAACE,IAAI,KAAK,GAAG,EAAE;QAClBf,KAAK,CAACgB,UAAU,CAACH,CAAC,CAACI,IAAI,CAACC,IAAI,EAAE,KAAK,CAAC;QACpC,SAAQC,IAAI,CAAC,QAAQ,CAAC;MACxB,CAAC,MAAM;QACL,SAAQC,KAAK,CAACP,CAAC,CAACQ,GAAG,CAAC;MACtB;IACF;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAE1B,CAAC,CAAC2B,SAAU;IAAC,KAAK,EAAE;MAAE,QAAQ,EAACvB;IAAO,CAAE;IAAA,wBACtD;MAAO,IAAI,EAAC,MAAM;MAAC,MAAM,EAAC,UAAU;MAAC,OAAO,EAAC,MAAM;MAAC,QAAQ,EAAEG;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7E;MAAK,GAAG,EAAEd,GAAG,gBAACY,KAAK,CAACuB,IAAI,gDAAV,YAAYC,GAAG,CAAC,GAAC5B,MAAM,GAAE,GAAEH,UAAW,IAAC,gBAAEO,KAAK,CAACuB,IAAI,iDAAV,aAAYC,GAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxE;AAEV,CAAC;AAAA,GApCK3B,SAAS;AAAA,KAATA,SAAS;AAsCf,qBAAgBP,QAAQ,CAACO,SAAS,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}